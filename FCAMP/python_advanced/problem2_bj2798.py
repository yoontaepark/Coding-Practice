# 문제: 블랙잭 (백준 2798번)
# 한줄풀이: 배열, 완전탐색, 그냥 3중반복으로 푼다

# 카지노에서 제일 인기 있는 게임 블랙잭의 규칙은 상당히 쉽다. 카드의 합이 21을 넘지 않는 한도 내에서, 카드의 합을 최대한 크게 만드는 게임이다. 블랙잭은 카지노마다 다양한 규정이 있다.
# 한국 최고의 블랙잭 고수 김정인은 새로운 블랙잭 규칙을 만들어 상근, 창영이와 게임하려고 한다.
# 김정인 버전의 블랙잭에서 각 카드에는 양의 정수가 쓰여 있다. 그 다음, 딜러는 N장의 카드를 모두 숫자가 보이도록 바닥에 놓는다. 그런 후에 딜러는 숫자 M을 크게 외친다.
# 이제 플레이어는 제한된 시간 안에 N장의 카드 중에서 3장의 카드를 골라야 한다. 블랙잭 변형 게임이기 때문에, 플레이어가 고른 카드의 합은 M을 넘지 않으면서 M과 최대한 가깝게 만들어야 한다.
# N장의 카드에 써져 있는 숫자가 주어졌을 때, M을 넘지 않으면서 M에 최대한 가까운 카드 3장의 합을 구해 출력하시오.

# 입력
# 첫째 줄에 카드의 개수 N(3 ≤ N ≤ 100)과 M(10 ≤ M ≤ 300,000)이 주어진다. 둘째 줄에는 카드에 쓰여 있는 수가 주어지며, 이 값은 100,000을 넘지 않는 양의 정수이다.
# 합이 M을 넘지 않는 카드 3장을 찾을 수 있는 경우만 입력으로 주어진다.

# 출력
# 첫째 줄에 M을 넘지 않으면서 M에 최대한 가까운 카드 3장의 합을 출력한다.

# 예제 입력 1 
# 5 21
# 5 6 7 8 9
# 예제 출력 1 
# 21
# 예제 입력 2 
# 10 500
# 93 181 245 214 315 36 185 138 216 295
# 예제 출력 2 
# 497

# 입력 두줄을 해야하니 각각 입력변수를 만든다
n, m = list(map(int, input().split(' ')))
data = list(map(int, input().split(' ')))

# 아래 함수를 쓰면서 만들겠지만, 최종 출력할 변수랑, 데이터의 길이가 필요(반복문 돌려야함)
result = 0 
length = len(data)

# 3중 반복문을 돌리는데, 0에서부터 총길이까지로 돌리면 전체 인덱스가 돔
# 하나씩 올려가면서 반복문 돌리면 3가지 인덱스의 C를 뽑아낼 수 있다
for i in range(0, length):
    for j in range(i+1, length):
        for k in range(j+1, length):
            # 3중 반복문에서의 각 변수들의 합을 SUM으로 정의하고 
            sum = data[i] + data[j] + data[k]
            # 만약 목표하는 숫자보다 작으면 바꿔끼는데, 기존 값과의 비교를 한다. 
            if sum <= m:
                result = max(result, sum)

# 최종 결과값 출력
print(result)





# 참고
# data = [1,2,3,4,5]

# for i in range(0, 5):
#     for j in range(i+1, 5):
#         for k in range(j+1, 5):
#             sum = data[i] + data[j] + data[k]
#             print(data[i], data[j], data[k], 'sum', sum)
