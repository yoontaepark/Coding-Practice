# 문제: 피보나치 수 (백준 2747번)
# 한줄 풀이: 재귀함수로 풀면 될거같은데 시간복잡도가 너무 큼 
# 따라서 a=0, b=1로 놓고 a, b = b, a+b 로 놓음으로서 한칸씩 우측이동시킴

# 피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다.
# 이를 식으로 써보면 Fn = Fn-1 + Fn-2 (n ≥ 2)가 된다.
# n=17일때 까지 피보나치 수를 써보면 다음과 같다.

# 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597

# n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 n이 주어진다. n은 45보다 작거나 같은 자연수이다.

# 출력
# 첫째 줄에 n번째 피보나치 수를 출력한다.

# 예제 입력 1 
# 10
# 예제 출력 1 
# 55

n = int(input())

a, b = 0, 1

while n > 0:
    a, b = b, a+b
    n -= 1

print(a)

# 참고: 실패 소스코드
# def fibonacci(n):
#     if n == 0:
#         return 0
#     if n == 1:
#         return 1
    
#     return fibonacci(n-1) + fibonacci(n-2)

# print(fibonacci(int(input()))) 